; General settings
; ********************************************************************

[GOLDEN_PLATFORM]
ip = 192.168.50.14
netmask = 24

[PLATFORM_UNDER_TEST]
ip = 192.168.50.13
netmask = 24

[PCAP_DUMP_LOCATION]
base_path = /home/leiu/captures/difftest

[SILENCE_OUTPUT]
generators = True
recorders = True

[GEN_INTERFACE_GP]
name = veth1

[GEN_INTERFACE_PUT]
name = veth1

[TAP_DEVICE_GP]
single_interface = True

[TAP_DEVICE_PUT]
single_interface = True

[REC_INTERFACE_GP_0]
name = ovs-p1

; ignored if TAP_DEVICE_GP single interface is True.
[REC_INTERFACE_GP_1]
name = ovs-p1

[REC_INTERFACE_PUT_0]
name = ovs-p1

; ignored if TAP_DEVICE_PUT single interface is True.
[REC_INTERFACE_PUT_1]
name = ovs-p1


; ICMP protocol specific
; ********************************************************************

[ICMP_GEN_CMD_0]
name = icmp_gen_cmd_0
prefix = ip netns exec ns1
cmd_str = ping -I %%s -c 10 %%s
; Unit is seconds ...
; 0 means the generator process is self terminating.
timeout = 0
; Unit is seconds ...
; Pause before the recording stops after a specific
; generator has finished.
pause_before_stop = 2
; BPF packet filter expression. If the expression remains
; empty, everything is going to be captured.
filter_expr = icmp
; Unit is seconds [ ( mean, sigma ), ... ]
; Time range sequence is repeated, if there are more packets
; than tuples in the time range list.
; Use the python syntax for the lists and tuples ...
time_rngs_gp = [ ( 0.001, 0.001 ), ( 1, 0.1 ) ]
time_rngs_put = [ ( 0.001, 0.001 ), ( 1, 0.1 ) ]


; TLS protocol specific
; ********************************************************************
[TLS_HS_0]
name = tls_hs_0
prefix = ip netns exec ns1
cmd_str = ../../mbedtls/programs/ssl/ssl_client2 server_addr=%%s
; Unit is seconds ...
; 0 means the generator process is self terminating.
timeout = 0
; Unit is seconds ...
; Pause before the recording stops after a specific
; generator has finished.
pause_before_stop = 2
; BPF packet filter expression. If the expression remains
; empty, everything is going to be captured.
filter_expr = tcp port 4433 and (tcp[((tcp[12] & 0xf0) >> 2)] = 0x16)
; Unit is seconds [ ( mean, sigma ), ... ]
; Time range sequence is repeated, if there are more packets
; than tuples in the time range list.
; Use the python syntax for the lists and tuples ...
time_rngs_gp = [ ( 0.000155, 0.000208 ), ( 0.000132, 0.000660 ), ( 0.010104, 0.002117 ), ( 0.000048, 0.000015 ), ( 0.010945, 0.003026 ), ( 0.000172, 0.000047 ), ( 0.005576, 0.001233 ), ( 0.000098, 0.000025 ) ]
time_rngs_put = [ ( 0.000155, 0.000208 ), ( 0.000132, 0.000660 ), ( 0.010104, 0.002117 ), ( 0.000048, 0.000015 ), ( 0.010945, 0.003026 ), ( 0.000172, 0.000047 ), ( 0.005576, 0.001233 ), ( 0.000098, 0.000025 ) ]



